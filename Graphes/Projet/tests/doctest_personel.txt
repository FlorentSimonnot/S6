>>> from graphe import *
>>> from fragilite import *
>>> import operator

>>> G = Graphe()
>>> charger_donnees(G, "données/METRO_1.txt")
>>> charger_donnees(G, "données/METRO_4.txt")
>>> charger_donnees(G, "données/METRO_7.txt")
>>> print(G.rechercher_id_station("Châtelet"))
1964
>>> print(G.voisins(1964))
[1805, 1806, 1855, 1864, 1892, 1975]
>>> print([G.rechercher_sommet(s) for s in G.voisins(1964)])
['Pont Marie (Cité des Arts)', 'Pont Neuf', 'Les Halles', 'Louvre-Rivoli', 'Hôtel de Ville', 'Cité']
>>> print(G.degre(1964))
6
>>> print(G.nombre_sommets())
86
>>> G2 = Graphe()
>>> charger_donnees(G2, "données/METRO_3b.txt")
>>> print(G2.nombre_sommets())
4
>>> print(G2.sommets_et_identifiants(operator.itemgetter(0)))
[[1659, 'Gambetta'], [1718, 'Saint-Fargeau'], [1752, 'Porte des Lilas'], [1783, 'Pelleport']]
>>> lst = []
>>> for s1, s2, ligne in G2.aretes() : 
...    lst.append((G2.rechercher_sommet(s1), G2.rechercher_sommet(s2), ligne))
>>> print(lst)
[('Gambetta', 'Pelleport', 'METRO_3b'), ('Saint-Fargeau', 'Porte des Lilas', 'METRO_3b'), ('Saint-Fargeau', 'Pelleport', 'METRO_3b')]
>>> G = Graphe()
>>> G.ajouter_sommets(zip('abcdefghijklmn', [None] * 14))
>>> G.ajouter_aretes(
...     [('a', 'b', None), ('b', 'c', None), ('c', 'd', None), ('d', 'a', None), ('c', 'e', None),
...      ('e', 'f', None), ('f', 'g', None), ('g', 'h', None), ('g', 'i', None), ('g', 'm', None),
...      ('l', 'm', None), ('m', 'n', None),
...      ('n', 'l', None)]
... )
>>> print(points_articulation(G))
['c', 'e', 'f', 'g', 'm']
>>> for u, v in amelioration_points_articulation(G) : 
...     G.ajouter_arete(u, v, None)
>>> G5 = Graphe()
>>> G5.ajouter_sommets(zip('abcdefghijklmn', [None] * 14))
>>> G5.ajouter_aretes(
...     [('a', 'b', None), ('b', 'c', None), ('c', 'd', None), ('d', 'a', None), ('c', 'e', None),
...      ('e', 'f', None), ('f', 'g', None), ('g', 'h', None), ('g', 'i', None), ('g', 'm', None),
...      ('l', 'm', None), ('m', 'n', None),
...      ('n', 'l', None)]
... )
>>> parcours_largeur_iteratif(G5, 'a')
['a', 'b', 'd', 'c', 'e', 'f', 'g', 'h', 'i', 'm', 'l', 'n']
>>> print(est_connexe(G))
True
>>> print(ponts(G5))
[('c', 'e'), ('e', 'f'), ('f', 'g'), ('g', 'h'), ('g', 'i'), ('g', 'm')]
>>> print(composantes(G5))
[['c', 'b', 'd', 'a'], ['e'], ['f'], ['g'], ['h'], ['i'], ['m', 'l', 'n']]
>>> print(feuilles(G5))
[['c', 'b', 'd', 'a'], ['e'], ['f'], ['g'], ['h'], ['i'], ['m', 'l', 'n']]
>>> for (u, v) in amelioration_ponts(G5) :
...     G5.ajouter_arete(u, v, None)
>>> print(len(ponts(G5)))
0
>>> G = Graphe()
>>> G.ajouter_sommets(zip('abc', [None] * 3))
>>> G.ajouter_aretes([('a', 'b', None)])
>>> est_connexe(G)
False
>>> cc = composantes_connexes(G)
>>> print(cc)
[['a', 'b'], ['c']]
>>> sont_dans_meme_composantes('a', 'c', cc)
False