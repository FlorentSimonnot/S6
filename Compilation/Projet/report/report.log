
---------GOOD------------

extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
    push QWORD 2
    push QWORD 98
    push QWORD 200000
Erreur syntax error near line 6 
test/good/add.tpc  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
    push QWORD 1
    pop QWORD [rbp-8]
    push QWORD [rbp-8]
    pop rcx
    push QWORD 97
    pop QWORD [rbp-32]
    push QWORD [rbp-32]
    pop rcx
    push QWORD [rbp-32]
    pop QWORD [rbp-8]
    push QWORD [rbp-8]
    pop rcx
    push QWORD [rbp-8]
    pop QWORD [rbp-32]
    push QWORD [rbp-32]
    pop rcx
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/good/cast.tpc  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

func1:
    push rbp
    mov rbp, rsp
    push QWORD [rbp+24]
    push QWORD [rbp+16]
    push QWORD 0
    pop rax
    jmp fin_func1
fin_func1:
    pop rbx
    pop rbx
    pop rbp
    ret

main:
    push rbp
    mov rbp, rsp
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/good/function.tpc  :  0
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
    push QWORD 5
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/good/perfect_cast  :  0
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
    push QWORD 5
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/good/perfect_cast.tpc  :  0
    push QWORD 10
extern printf

extern scanf

section .bss
    globals resb 8

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
    push QWORD -2
    push QWORD 3
    push QWORD 4
    push QWORD 1
    push QWORD 2
    push QWORD 3
    push QWORD 99
    push QWORD 97
     push QWORD 0
    push QWORD 0
     push QWORD 0
    push QWORD 18
    push QWORD 13
    push QWORD [rbp-8]
    pop rcx
    pop rax
    cmp rax, rcx
    mov rax,1
    mov rax, 0 
    jg cond_ord0 
    je cond_ord0 
    mov rax, 1 
cond_ord0:
    push rax
    pop rax
    cmp rax,0
    je else_no1
    push QWORD [rbp-8]
    pop rsi
    call _print_ent
    jmp fin_if1
else_no1:
fin_if1:
    push QWORD 99
    pop QWORD [rbp-8]
    push QWORD [rbp-8]
    pop rcx
    push QWORD 97
    pop QWORD [rbp-16]
    push QWORD [rbp-16]
    pop rcx
    push QWORD [rbp-8]
    push QWORD [rbp-16]
    pop rcx
    pop rax
    add rax, rcx
    push rax
    pop QWORD [rbp-72]
    push QWORD [rbp-72]
    pop rcx
    push QWORD [rbp-8]
    push QWORD [rbp-16]
    pop rcx
    pop rax
    mov rdx,0
    idiv rcx
    push rax
    pop QWORD [rbp-88]
    push QWORD [rbp-88]
    pop rcx
    push QWORD 1
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/good/test.tpc  :  0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
extern printf

extern scanf

section .bss
    globals resb 72

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
    push QWORD 12
    pop QWORD [globals+8]
    push QWORD [globals+8]
    pop rcx
    push QWORD 24
    pop QWORD [globals+16]
    push QWORD [globals+16]
    pop rcx
    push QWORD 24
    push QWORD 12
    pop rcx
    pop rax
    mov rdx,0
    idiv rcx
    push rax
    pop QWORD [globals+32]
    push QWORD [globals+32]
    pop rcx
    push QWORD [globals+16]
    push QWORD [globals+32]
    pop rcx
    pop rax
    add rax, rcx
    push rax
    pop QWORD [globals+8]
    push QWORD [globals+8]
    pop rcx
    push QWORD [globals+8]
    push QWORD 1
    pop rcx
    pop rax
    sub rax, rcx
    push rax
    pop QWORD [globals+24]
    push QWORD [globals+24]
    pop rcx
    push QWORD [globals+8]
    push QWORD [globals+8]
    pop rcx
    pop rax
    imul rcx
    push rax
    pop QWORD [globals+16]
    push QWORD [globals+16]
    pop rcx
    push QWORD [globals+8]
    push QWORD [globals+16]
    pop rcx
    pop rax
    add rax, rcx
    push rax
    pop QWORD [globals+40]
    push QWORD [globals+40]
    pop rcx
    push QWORD [globals+8]
    push QWORD [globals+16]
    pop rcx
    pop rax
    add rax, rcx
    push rax
    push QWORD [globals+8]
    push QWORD [globals+40]
    pop rcx
    pop rax
    add rax, rcx
    push rax
    pop rcx
    pop rax
    mov rdx,0
    idiv rcx
    push rax
    push QWORD 5
    pop rcx
    pop rax
    mov rdx,0
    idiv rcx
    push rdx
    pop QWORD [globals+16]
    push QWORD [globals+16]
    pop rcx
    push QWORD [globals+56]
    pop QWORD [globals+48]
    push QWORD [globals+48]
    pop rcx
    push QWORD 3
    pop rsi
    call _print_ent
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/good/type.tpc  :  0

---------BAD-------------

extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
     push QWORD 0
    push QWORD 2
     push QWORD 0
    push QWORD [rbp-16]
    pop rcx
Erreur Function is non-void and should return a value near line 6 
fin_main:
    pop rbx
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/assign_constante  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
     push QWORD 0
    push QWORD 2
     push QWORD 0
    push QWORD [rbp-16]
    pop rcx
Erreur Function is non-void and should return a value near line 5 
fin_main:
    pop rbx
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/assign_constante.tpc  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
    push QWORD 1
     push QWORD 0
    push QWORD [rbp-8]
    pop QWORD [rbp-16]
    push QWORD [rbp-16]
    pop rcx
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/int_in_char  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
    push QWORD 1
     push QWORD 0
    push QWORD [rbp-8]
    pop QWORD [rbp-16]
    push QWORD [rbp-16]
    pop rcx
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/int_in_char.tpc  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
     push QWORD 0
     push QWORD 0
    push QWORD [rbp-16]
    pop QWORD [rbp-8]
    push QWORD [rbp-8]
    pop rcx
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/long_in_int  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
     push QWORD 0
     push QWORD 0
    push QWORD [rbp-16]
    pop QWORD [rbp-8]
    push QWORD [rbp-8]
    pop rcx
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/long_in_int.tpc  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
     push QWORD 0
     push QWORD 0
    mov rsi, rbp
    sub rsi, 8
    call _reade
    mov rsi, rbp
    sub rsi, 16
    call _reade
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/reade_vs_readc  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
     push QWORD 0
     push QWORD 0
    mov rsi, rbp
    sub rsi, 16
    call _reade
    mov rsi, rbp
    sub rsi, 16
    call _reade
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/reade_vs_readc.tpc  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

func1:
    push rbp
    mov rbp, rsp
     push QWORD 0
     push QWORD 0
Erreur Function is non-void and should return a value near line 3 
fin_func1:
    pop rbx
    pop rbx
    pop rbp
    ret

main:
    push rbp
    mov rbp, rsp
    push QWORD 3
     push QWORD 0
     push QWORD 0
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/redefine.tpc  :  1
extern printf

extern scanf

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
    push QWORD 0
    pop rax
    jmp fin_main
fin_main:
    pop rbp
    ret

main:
    push rbp
    mov rbp, rsp
    push QWORD 1
    pop rax
    jmp fin_main
fin_main:
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/redefine_function.tpc  :  0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
     push QWORD 0
extern printf

extern scanf

section .bss
    globals resb 88

section .data
    format_ent db "%d", 10, 0
    format_long db "%d", 10, 0
    format_sent db "%d\n", 10, 0

section .text

global _start

_print_car:
    mov rax, 1
    push rsi
    mov rdi, 1
    mov rsi, rsp
    mov rdx, 1
    syscall
    pop rsi
    ret

_print_ent:
    mov rdi, format_ent
    mov rax, 0
    call printf WRT ..plt
    ret

_print_long:
    mov rdi, format_long
    mov rax, 0
    call printf WRT ..plt
    ret

_readc:
    mov rax, 0
    mov rdi, 0
    mov rdx, 1
    call scanf
    ret

_reade:
    mov rax, 0
    mov rdi, format_sent
    call scanf
    ret

_start:
    call main
    jmp _end

main:
    push rbp
    mov rbp, rsp
     push QWORD 0
    push QWORD 12
    pop QWORD [rbp-8]
    push QWORD [rbp-8]
    pop rcx
    push QWORD 24
    pop QWORD [globals+40]
    push QWORD [globals+40]
    pop rcx
    push QWORD [rbp-8]
    push QWORD [globals+40]
    pop rcx
    pop rax
    add rax, rcx
    push rax
    pop QWORD [globals+16]
    push QWORD [globals+16]
    pop rcx
    push QWORD 46
    pop QWORD [globals+72]
    push QWORD [globals+72]
    pop rcx
    push QWORD 3
    pop QWORD [globals+72]
    push QWORD [globals+72]
    pop rcx
    push QWORD [globals+16]
    pop rax
    jmp fin_main
fin_main:
    pop rbx
    pop rbp
    ret

_end:
    mov rdi, rax
    mov rax, 60
    syscall
test/bad/variable_not_declared.tpc  :  1
